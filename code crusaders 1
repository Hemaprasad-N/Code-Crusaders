whisper handler
```
import whisper

model = whisper.load_model("base")

def transcribe_audio(audio_path="input.wav", language="ta"):
    result = model.transcribe(audio_path, language=language)
    return result["text"]

```
translate handler
```
from transformers import MarianMTModel, MarianTokenizer

model_name = "Helsinki-NLP/opus-mt-ta-en"
tokenizer = MarianTokenizer.from_pretrained(model_name)
model = MarianMTModel.from_pretrained(model_name)

def translate_ta_to_en(text):
    tokens = tokenizer.prepare_seq2seq_batch([text], return_tensors="pt")
    translation = model.generate(**tokens)
    return tokenizer.decode(translation[0], skip_special_tokens=True)

```
llama handler
```
import requests

def generate_description(prompt):
    res = requests.post("http://localhost:11434/api/generate", json={
        "model": "llama2",
        "prompt": f"Generate a product description for: {prompt}",
        "stream": False
    })
    return res.json()["response"]

```
